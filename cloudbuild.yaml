steps:
  # The first step uses the Docker builder to build a Docker image. The gcr.io/cloud-builders/docker image is used to run the docker build command. The --platform flag specifies the platform to build the image for, and the -t flag tags the image with the project ID, repository name, and commit SHA. The . at the end specifies the build context, which is the current directory.
  - name: 'gcr.io/cloud-builders/docker'
    args: ["build", "--platform", "linux/amd64", "-t", 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA',"."]
    # The second step pushes the Docker image to the Google Container Registry. The gcr.io/cloud-builders/docker image is used to run the docker push command. The image is pushed to the Google Container Registry with the same tag as in the previous step.
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA']
    # The third step uses the Google Cloud SDK to deploy the Docker image to Google Cloud Run. The gcr.io/google.com/cloudsdktool/cloud-sdk image is used to run the gcloud run deploy command. The $REPO_NAME variable is used to specify the name of the service to deploy. The --image flag specifies the Docker image to deploy, and the --region flag specifies the region to deploy to. The --allow-unauthenticated flag allows unauthenticated access to the service.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - '$REPO_NAME'
    - '--image'
    - 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA'
    - '--region'
    - 'asia-southeast2'
    - '--allow-unauthenticated'
  # - name: 'gcr.io/cloud-builders/gke'
  #   args: [ 'deploy', '$REPO_NAME', '--image', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA', '--port', '80' ]

# The images field specifies the Docker image that was built and pushed to the registry. This field is used by other services to reference the Docker image.
images: ['gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA']
  # timeout: "1600s"
